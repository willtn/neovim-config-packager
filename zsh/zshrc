# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Path to XDG_CONFIG_HOME.
export XDG_CONFIG_HOME="$HOME/.config"

# PATH
export PATH="$HOME/.yarn/bin:$HOME/.local/bin:$HOME/.jenv/bin:$PATH"

# Bootstrap oh-my-zsh
ENABLE_CORRECTION="true"
source $ZSH/oh-my-zsh.sh

## Antigen
source $HOME/.antigen/antigen.zsh

antigen use oh-my-zsh

antigen bundles <<EOBUNDLES
  alexrochas/zsh-extract
  alexrochas/zsh-git-semantic-commits
  alexrochas/zsh-vim-crtl-z
  command-not-found
  copydir
  copyfile
  git
#  git-auto-fetch
  jira
  nvm
  tmux
  zsh-users/zsh-autosuggestions
  zsh-users/zsh-syntax-highlighting
EOBUNDLES

antigen theme https://github.com/halfo/lambda-mod-zsh-theme lambda-mod

antigen apply

# exports
export EDITOR=nvim
export TWOBOX=115

# aliases
alias vim='nvim'

alias testall='yarn test --all'
alias testper='yarn test --packages performance'
alias testedc='yarn test --packages edc-web'

alias typeall='yarn typecheck --all'
alias typeedc='yarn typecheck --packages edc-web'
alias typepes='yarn typecheck --packages pes-web'

alias uiper='yarn dev --packages performance --agency performance.qa.evidence.com'
alias uiedc='yarn dev --agency vietnamui.qa.evidence.com'
alias uipes='yarn dev --agency vietnamui.qa.evidence.com --packages pes-web'

alias buildedc='NODE_OPTIONS="--max-old-space-size=4096" lerna run build --scope @axon/edc-web'
alias buildpes='yarn build --packages pes-web'

alias vl='openvpn3 sessions-list'
alias vc='openvpn3 session-manage --cleanup'

alias vdev='openvpn3 session-start --config tvs-dev'
alias vddev='openvpn3 session-manage --config tvs-dev --disconnect'

alias vag1='openvpn3 session-start --config tvs-ag1'
alias vdag1='openvpn3 session-manage --config tvs-ag1 --disconnect'

alias vus2='openvpn3 session-start --config tvs-us2'
alias vdus2='openvpn3 session-manage --config tvs-us2 --disconnect'

alias vus5='openvpn3 session-start --config tvs-us5'
alias vdus5='openvpn3 session-manage --config tvs-us5 --disconnect'

alias weather="curl http://wttr.in"

alias k="kubectl"

alias kcag1="export KUBECONFIG=~/projects/ops/kubernetes2/env/ag1/ecom-cluster-b/kube.config"
alias kcdv1="export KUBECONFIG=~/projects/ops/kubernetes2/env/dv1/ecom-cluster-b/kube.config"
alias kcus2="export KUBECONFIG=~/projects/ops/kubernetes2/env/us2/ecom-cluster-b/kube.config"

# nvm
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
source "$NVM_DIR/nvm.sh"

# zsh-autosuggestions
bindkey '^ ' autosuggest-accept

# Zsh-Vim-Crtl-Z
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# stack
# eval "$(stack --bash-completion-script stack)"

# X11
export DISPLAY=:0.0

# jEnv
eval "$(jenv init -)"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/trungn/.sdkman"
[[ -s "/home/trungn/.sdkman/bin/sdkman-init.sh" ]] && source "/home/trungn/.sdkman/bin/sdkman-init.sh"

