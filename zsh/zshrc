# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Path to XDG_CONFIG_HOME.
export XDG_CONFIG_HOME="$HOME/.config"

# Bootstrap oh-my-zsh
ENABLE_CORRECTION="true"
source $ZSH/oh-my-zsh.sh

## Antigen
source $HOME/.antigen/antigen.zsh

antigen use oh-my-zsh

antigen bundles <<EOBUNDLES
  alexrochas/zsh-extract
  alexrochas/zsh-git-semantic-commits
  alexrochas/zsh-vim-crtl-z
  command-not-found
  copydir
  copyfile
  git
  git-auto-fetch
  jira
  nvm
  tmux
  zsh-users/zsh-autosuggestions
  zsh-users/zsh-completions
  zsh-users/zsh-syntax-highlighting
EOBUNDLES

antigen theme https://github.com/halfo/lambda-mod-zsh-theme lambda-mod

antigen apply

# exports
export EDITOR=nvim
export TWOBOX=115

# aliases
alias vim='nvim'

alias testall='yarn test --all'
alias testper='yarn test --packages performance'
alias testedc='yarn test --packages edc-web'

alias typeall='yarn typecheck --all'
alias typeedc='yarn typecheck --packages edc-web'
alias typepes='yarn typecheck --packages pes-web'

alias uiper='yarn dev --packages performance --agency performance.qa.evidence.com'
alias uiedc='yarn dev --agency vietnamui.qa.evidence.com'
alias uipes='yarn dev --agency vietnamui.qa.evidence.com --packages pes-web'

alias buildedc='NODE_OPTIONS="--max-old-space-size=4096" lerna run build --scope @axon/edc-web'
alias buildpes='yarn build --packages pes-web'

alias weather="curl http://wttr.in"

# nvm
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
source "$NVM_DIR/nvm.sh"

# zsh-autosuggestions
bindkey '^ ' autosuggest-accept

# Zsh-Vim-Crtl-Z
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
